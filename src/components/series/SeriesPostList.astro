---
import { getCollection } from "astro:content";

interface Props {
  seriesId: string;
  orderInSeries?: number;
}

const { seriesId, orderInSeries }: Props = Astro.props;

const seriesPosts = (await getCollection("posts")).filter(
  (post) => post.data.seriesId === seriesId
);

// Sort by orderInSeries
seriesPosts.sort(
  (a, b) => (a.data.orderInSeries ?? 0) - (b.data.orderInSeries ?? 0)
);
const currentIndex =
  seriesPosts.findIndex((post) => post.data.orderInSeries === orderInSeries) +
  1;
---

<!-- Retractable Bullet Point List -->
<div class="flex flex-col w-full">
  <ul class="list-disc list-inside w-4/5">
    {
      seriesPosts.map((post) => (
        <li
          class={`${
            post.data.orderInSeries === currentIndex
              ? "font-semibold"
              : "font-normal"
          }`}
        >
          {post.data.planned ? (
            <span class="cursor-not-allowed">{post.data.title}</span>
          ) : (
            <a href={post.slug} class="no-underline hover:underline">
              {post.data.title}
            </a>
          )}
          {post.data.planned ? (
            <span class="text-white ml-2 badge">Planned</span>
          ) : (
            ""
          )}
        </li>
      ))
    }
  </ul>
</div>

<style>
  div {
    margin: 0.65rem 0;
    font-size: 0.65rem;
  }

  a {
    text-decoration: none;
    text-underline-offset: 0.2em;
    color: inherit;
  }

  .badge {
    display: inline-block;
    padding: 0.25em 0.4em;
    font-size: 75%;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    white-space: nowrap;
    vertical-align: baseline;
    border-radius: 0.25rem;
    background-color: #e53e3e;
  }
</style>
